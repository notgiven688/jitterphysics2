"use strict";(self.webpackChunkjitterphysics=self.webpackChunkjitterphysics||[]).push([[110],{4567:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=o(4848),i=o(8453);const r={sidebar_position:3},a="Hello World",s={id:"quickstart/boxes/hello-world",title:"Hello World",description:"We will now add physics to the scene. We do this by creating a new instance of the World class and adding several rigid bodies to it.",source:"@site/docs/01_quickstart/01_boxes/02-hello-world.md",sourceDirName:"01_quickstart/01_boxes",slug:"/quickstart/boxes/hello-world",permalink:"/docs/quickstart/boxes/hello-world",draft:!1,unlisted:!1,editUrl:"https://github.com/notgiven688/jitterphysics2/tree/main/docs/docs/01_quickstart/01_boxes/02-hello-world.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Render Loop",permalink:"/docs/quickstart/boxes/render-loop"},next:{title:"Dropping Teapots",permalink:"/docs/category/dropping-teapots"}},d={},l=[];function c(e){const n={code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"hello-world",children:"Hello World"})}),"\n",(0,t.jsx)(n.p,{children:"We will now add physics to the scene. We do this by creating a new instance of the World class and adding several rigid bodies to it."}),"\n",(0,t.jsxs)(n.p,{children:["Replace the content of ",(0,t.jsx)(n.code,{children:"Program.cs"})," with the following code (marked lines indicate the additions to the source code):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cs",metastring:"Program.cs {3-6,9-18,28,41-63,88-94} showLineNumbers",children:'using System.Numerics;\nusing Raylib_cs;\nusing Jitter2;\nusing Jitter2.Collision.Shapes;\nusing Jitter2.Dynamics;\nusing Jitter2.LinearMath;\nusing static Raylib_cs.Raylib;\n\nstatic Matrix4x4 GetRayLibTransformMatrix(RigidBody body)\n{\n    JMatrix ori = JMatrix.CreateFromQuaternion(body.Orientation);\n    JVector pos = body.Position;\n\n    return new Matrix4x4(ori.M11, ori.M12, ori.M13, pos.X,\n                         ori.M21, ori.M22, ori.M23, pos.Y,\n                         ori.M31, ori.M32, ori.M33, pos.Z,\n                         0, 0, 0, 1.0f);\n}\n\nstatic Texture2D GenCheckedTexture(int size, int checks, Color colorA, Color colorB)\n{\n    Image imageMag = GenImageChecked(size, size, checks, checks, colorA, colorB);\n    Texture2D textureMag = LoadTextureFromImage(imageMag);\n    UnloadImage(imageMag);\n    return textureMag;\n}\n\nconst int NumberOfBoxes = 12;\n\n// set a hint for anti-aliasing\nSetConfigFlags(ConfigFlags.Msaa4xHint);\n\n// initialize a 1200x800 px window with a title\nInitWindow(1200, 800, "BoxDrop example");\n\n// dynamically create a plane model\nTexture2D texture = GenCheckedTexture(10, 1,  Color.LightGray, Color.Gray);\nModel planeModel = LoadModelFromMesh(GenMeshPlane(10, 10, 10, 10));\nSetMaterialTexture(ref planeModel, 0, MaterialMapIndex.Diffuse, ref texture);\n\n// dynamically create a box model\ntexture = GenCheckedTexture(2, 1,  Color.White, Color.Magenta);\nMesh boxMesh = GenMeshCube(1, 1, 1);\nMaterial boxMat = LoadMaterialDefault();\nSetMaterialTexture(ref boxMat, MaterialMapIndex.Diffuse, texture);\n\n// initialize the Jitter physics world\nWorld world = new ();\nworld.SubstepCount = 4;\n\n// add a body representing the plane\nRigidBody planeBody = world.CreateRigidBody();\nplaneBody.AddShape(new BoxShape(10));\nplaneBody.Position = new JVector(0, -5, 0);\nplaneBody.MotionType = MotionType.Static;\n\n// add NumberOfBoxes cubes\nfor(int i = 0; i < NumberOfBoxes; i++)\n{\n    RigidBody body = world.CreateRigidBody();\n    body.AddShape(new BoxShape(1));\n    body.Position = new JVector(0, i * 2 + 0.5f, 0);\n}\n\n// create a camera\nCamera3D camera = new ()\n{\n    Position = new Vector3(-20.0f, 8.0f, 10.0f),\n    Target = new Vector3(0.0f, 4.0f, 0.0f),\n    Up = new Vector3(0.0f, 1.0f, 0.0f),\n    FovY = 45.0f,\n    Projection = CameraProjection.Perspective\n};\n\n// 100 fps target\nSetTargetFPS(100);\n\n// simple render loop\nwhile (!WindowShouldClose())\n{\n    BeginDrawing();\n    ClearBackground(Color.Blue);\n\n    BeginMode3D(camera);\n\n    DrawModel(planeModel, Vector3.Zero, 1.0f, Color.White);\n\n    world.Step(1.0f / 100.0f, true);\n\n    foreach(var body in world.RigidBodies)\n    {\n        if (body == planeBody || body == world.NullBody) continue; // do not draw this\n        DrawMesh(boxMesh, boxMat, GetRayLibTransformMatrix(body));\n    }\n\n    EndMode3D();\n    DrawText($"{GetFPS()} fps", 10, 10, 20, Color.White);\n\n    EndDrawing();\n}\n\nCloseWindow();\n'})}),"\n",(0,t.jsx)(n.p,{children:"Running your program, you should now see a few boxes dynamically falling onto the ground."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"plane",src:o(8956).A+"",width:"1198",height:"795"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8956:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/raylibjitter-70ae279a0ceb57d513433beed08859bd.gif"},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var t=o(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);