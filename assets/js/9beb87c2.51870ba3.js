"use strict";(self.webpackChunkjitterphysics=self.webpackChunkjitterphysics||[]).push([[539],{5851:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=n(4848),t=n(8453);const l={sidebar_position:5},s="Changelog",d={id:"changelog",title:"Changelog",description:"Jitter 2.6.2 (2025-05-06)",source:"@site/docs/changelog.md",sourceDirName:".",slug:"/changelog",permalink:"/docs/changelog",draft:!1,unlisted:!1,editUrl:"https://github.com/notgiven688/jitterphysics2/tree/main/docs/docs/changelog.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Collision Filters",permalink:"/docs/documentation/filters"}},o={},c=[{value:"Jitter 2.6.2 (2025-05-06)",id:"jitter-262-2025-05-06",level:3},{value:"Jitter 2.6.1 (2025-04-24)",id:"jitter-261-2025-04-24",level:3},{value:"Jitter 2.6.0 (2025-04-24)",id:"jitter-260-2025-04-24",level:3},{value:"Jitter 2.5.9 (2025-04-17)",id:"jitter-259-2025-04-17",level:3},{value:"Jitter 2.5.8 (2025-04-16)",id:"jitter-258-2025-04-16",level:3},{value:"Jitter 2.5.7 (2025-04-06)",id:"jitter-257-2025-04-06",level:3},{value:"Jitter 2.5.6 (2025-03-08)",id:"jitter-256-2025-03-08",level:3},{value:"Jitter 2.5.5 (2025-03-02)",id:"jitter-255-2025-03-02",level:3},{value:"Jitter 2.5.4 (2025-02-08)",id:"jitter-254-2025-02-08",level:3},{value:"Jitter 2.5.3 (2025-01-12)",id:"jitter-253-2025-01-12",level:3},{value:"Jitter 2.5.2 (2025-01-08)",id:"jitter-252-2025-01-08",level:3},{value:"Jitter 2.5.1 (2024-12-31)",id:"jitter-251-2024-12-31",level:3},{value:"Jitter 2.5.0 (2024-12-23)",id:"jitter-250-2024-12-23",level:3},{value:"Jitter 2.4.9 (2024-12-18)",id:"jitter-249-2024-12-18",level:3},{value:"Jitter 2.4.8 (2024-11-27)",id:"jitter-248-2024-11-27",level:3},{value:"Jitter 2.4.7 (2024-11-18)",id:"jitter-247-2024-11-18",level:3},{value:"Jitter 2.4.6 (2024-10-28)",id:"jitter-246-2024-10-28",level:3},{value:"Jitter 2.4.5 (2024-10-07)",id:"jitter-245-2024-10-07",level:3},{value:"Jitter 2.4.4 (2024-09-14)",id:"jitter-244-2024-09-14",level:3},{value:"Jitter 2.4.3 (2024-08-31)",id:"jitter-243-2024-08-31",level:3},{value:"Jitter 2.4.2 (2024-08-26)",id:"jitter-242-2024-08-26",level:3},{value:"Jitter 2.4.1 (2024-08-21)",id:"jitter-241-2024-08-21",level:3},{value:"Jitter 2.4.0 (2024-08-10)",id:"jitter-240-2024-08-10",level:3},{value:"Jitter 2.3.1 (2024-06-02)",id:"jitter-231-2024-06-02",level:3},{value:"Jitter 2.3.0 (2024-05-20)",id:"jitter-230-2024-05-20",level:3},{value:"Jitter 2.2.1 (2024-04-29)",id:"jitter-221-2024-04-29",level:3},{value:"Jitter 2.2.0 (2024-01-02)",id:"jitter-220-2024-01-02",level:3},{value:"Jitter 2.1.1 (2023-12-17)",id:"jitter-211-2023-12-17",level:3},{value:"Jitter 2.1.0 (2023-12-10)",id:"jitter-210-2023-12-10",level:3},{value:"Jitter 2.0.1 (2023-10-28)",id:"jitter-201-2023-10-28",level:3},{value:"Jitter 2.0.0 (2023-10-22)",id:"jitter-200-2023-10-22",level:3}];function a(e){const i={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"changelog",children:"Changelog"})}),"\n",(0,r.jsx)(i.h3,{id:"jitter-262-2025-05-06",children:"Jitter 2.6.2 (2025-05-06)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Use ",(0,r.jsx)(i.strong,{children:"Generics"})," in ",(0,r.jsx)(i.code,{children:"NarrowPhase.cs"})," (avoid boxing for structs implementing the ",(0,r.jsx)(i.code,{children:"ISupportMappable"})," interface)."]}),"\n",(0,r.jsxs)(i.li,{children:["Add special code paths in ",(0,r.jsx)(i.code,{children:"Contact.cs"})," for static bodies (avoid unnecessary cache line invalidation)."]}),"\n",(0,r.jsxs)(i.li,{children:["Add ",(0,r.jsx)(i.code,{children:"PredictPosition"}),", ",(0,r.jsx)(i.code,{children:"PredictOrientation"})," and ",(0,r.jsx)(i.code,{children:"PredictPose"})," to ",(0,r.jsx)(i.code,{children:"RigidBody"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Add ",(0,r.jsx)(i.code,{children:"CreateFromAxisAngle"})," and ",(0,r.jsx)(i.code,{children:"Normalize"})," methods in ",(0,r.jsx)(i.code,{children:"JQuaternion"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-261-2025-04-24",children:"Jitter 2.6.1 (2025-04-24)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Bugfix in ",(0,r.jsx)(i.code,{children:"TriangleEdgeCollisionFilter"})," for speculative contacts."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-260-2025-04-24",children:"Jitter 2.6.0 (2025-04-24)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Add ",(0,r.jsx)(i.code,{children:"SampleHull"})," and ",(0,r.jsx)(i.code,{children:"MakeHull"})," to ",(0,r.jsx)(i.code,{children:"ShapeHelper"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Fix hill climbing getting stuck for ",(0,r.jsx)(i.code,{children:"ConvexHullShape"}),"s."]}),"\n",(0,r.jsxs)(i.li,{children:["Add SIMD support for ",(0,r.jsx)(i.code,{children:"PointCloudShape"}),"s."]}),"\n",(0,r.jsxs)(i.li,{children:["Add option to ignore degenerated triangles in ",(0,r.jsx)(i.code,{children:"TriangleMesh"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Make thickness parameter mandatory in ",(0,r.jsx)(i.code,{children:"FatTriangleShape"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Add Fisher-Yates shuffle to ",(0,r.jsx)(i.code,{children:"DynamicTree.Optimize"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Optimized ",(0,r.jsx)(i.code,{children:"TriangleEdgeCollisionFilter"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-259-2025-04-17",children:"Jitter 2.5.9 (2025-04-17)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Use ",(0,r.jsx)(i.code,{children:"CollideEpsilon"})," 1e-5 in MPREPA."]}),"\n",(0,r.jsxs)(i.li,{children:["Fix a bug in ",(0,r.jsx)(i.code,{children:"ShardedDictionary"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-258-2025-04-16",children:"Jitter 2.5.8 (2025-04-16)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Fixed ",(0,r.jsx)(i.code,{children:"DynamicTree.Optimize"})," messing up collision pairs."]}),"\n",(0,r.jsxs)(i.li,{children:["Refactored ",(0,r.jsx)(i.code,{children:"SoftBody.cs"})]}),"\n",(0,r.jsxs)(i.li,{children:["Improved ",(0,r.jsx)(i.code,{children:"TriangleEdgeCollisionFilter"}),"."]}),"\n",(0,r.jsx)(i.li,{children:"Further reduced GC."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-257-2025-04-06",children:"Jitter 2.5.7 (2025-04-06)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Fixed possible crash when dynamically making bodies static."}),"\n",(0,r.jsx)(i.li,{children:"Improved memory footprint and reduced GC."}),"\n",(0,r.jsxs)(i.li,{children:["Added ",(0,r.jsx)(i.code,{children:"Logger"})," as a replacement for ",(0,r.jsx)(i.code,{children:"Trace"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-256-2025-03-08",children:"Jitter 2.5.6 (2025-03-08)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Fixed concurrency bug in ",(0,r.jsx)(i.code,{children:"world.GetArbiter"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-255-2025-03-02",children:"Jitter 2.5.5 (2025-03-02)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Added implicit conversion operators for System.Numerics Vector3 and Quaternion."}),"\n",(0,r.jsx)(i.li,{children:"Replaced Trace.WriteLine with Trace.Information, Warning, Error."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-254-2025-02-08",children:"Jitter 2.5.4 (2025-02-08)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Renamed ",(0,r.jsx)(i.code,{children:"JAngle.Radiant"})," to ",(0,r.jsx)(i.code,{children:"JAngle.Radian"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Renamed namespace ",(0,r.jsx)(i.code,{children:"Jitter2.UnmanagedMemory"})," to ",(0,r.jsx)(i.code,{children:"Jitter2.Unmanaged"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Fix ",(0,r.jsx)(i.code,{children:"body.AddShape(IEnumerable<RigidBodyShape> shapes)"})," for one-time-use iterators."]}),"\n",(0,r.jsx)(i.li,{children:"Smaller improvements in XML-documentation."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-253-2025-01-12",children:"Jitter 2.5.3 (2025-01-12)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["DynamicTree, ",(0,r.jsx)(i.code,{children:"Optimize"})," takes a delegate now."]}),"\n",(0,r.jsxs)(i.li,{children:["Fixed ",(0,r.jsx)(i.code,{children:"TriangleShape"})," ray cast not returning a normalized normal."]}),"\n",(0,r.jsxs)(i.li,{children:["Removed the ",(0,r.jsx)(i.code,{children:"CollisionHelper"})," class."]}),"\n",(0,r.jsxs)(i.li,{children:["Renamed ",(0,r.jsx)(i.code,{children:"ActiveList"})," and ",(0,r.jsx)(i.code,{children:"UnmanagedActiveList"})," to ",(0,r.jsx)(i.code,{children:"PartitionedSet"})," and ",(0,r.jsx)(i.code,{children:"PartitionedBuffer"}),", respectively."]}),"\n",(0,r.jsx)(i.li,{children:"Various smaller improvements (ToString() overloads, IEquality<T> implementations, XML-documentation)"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-252-2025-01-08",children:"Jitter 2.5.2 (2025-01-08)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Added enumeration method to ",(0,r.jsx)(i.code,{children:"DynamicTree"})," and made ",(0,r.jsx)(i.code,{children:"PairHashSet"})," internal."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Removed ",(0,r.jsx)(i.code,{children:"UseFullEPASolver"})," option."]}),"\n",(0,r.jsx)(i.li,{children:"Further improved simulation performance under high lock contention scenarios."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-251-2024-12-31",children:"Jitter 2.5.1 (2024-12-31)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Bugfix in ",(0,r.jsx)(i.code,{children:"PairHashSet"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-250-2024-12-23",children:"Jitter 2.5.0 (2024-12-23)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Better utilization of multi core systems."}),"\n",(0,r.jsx)(i.li,{children:"Bugfix in collision detection (possible NaN values)."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-249-2024-12-18",children:"Jitter 2.4.9 (2024-12-18)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Huge improvements for the ",(0,r.jsx)(i.code,{children:"DynamicTree"})," implementation."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-248-2024-11-27",children:"Jitter 2.4.8 (2024-11-27)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Add option to build in double precision mode."}),"\n",(0,r.jsxs)(i.li,{children:["Made ",(0,r.jsx)(i.code,{children:"Constraint"})," constructor public to allow for custom constraints."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-247-2024-11-18",children:"Jitter 2.4.7 (2024-11-18)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Dropped .NET6 support, added .NET9."]}),"\n",(0,r.jsx)(i.li,{children:"SIMD for contacts."}),"\n",(0,r.jsx)(i.li,{children:"Contact manifold overflow fix."}),"\n",(0,r.jsx)(i.li,{children:"Changed default damping."}),"\n",(0,r.jsx)(i.li,{children:"Improved auxiliary contact points."}),"\n",(0,r.jsx)(i.li,{children:"Minor API changes."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-246-2024-10-28",children:"Jitter 2.4.6 (2024-10-28)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Jitter world is now constructed using World.Capacity."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," World.RayCast moved to World.DynamicTree.RayCast."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Renamed NumberSubsteps to SubstepCount."]}),"\n",(0,r.jsxs)(i.li,{children:["Added split impulses. ",(0,r.jsx)(i.strong,{children:"Breaking Change:"})," SolverIterations property is now a tuple."]}),"\n",(0,r.jsx)(i.li,{children:"Several smaller improvements in the API."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-245-2024-10-07",children:"Jitter 2.4.5 (2024-10-07)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Added new methods to NarrowPhase: Distance and Overlap."}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"}),"  Renamed NarrowPhase.SweepTest to NarrowPhase.Sweep."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"}),"  Renamed NarrowPhase.GJKEPA to NarrowPhase.Collision."]}),"\n",(0,r.jsx)(i.li,{children:"Made PointTest, Raycast and SweepTest to use new SimplexSolver and SimplexSolverAB implementations."}),"\n",(0,r.jsx)(i.li,{children:"Fixed normal in GJKEPA for separating case."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-244-2024-09-14",children:"Jitter 2.4.4 (2024-09-14)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Implemented fixes and workarounds for using Jitter with a debugger attached."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-243-2024-08-31",children:"Jitter 2.4.3 (2024-08-31)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Correct corner case beeing wrong in MPR collision detection due to typo (bug fix)."}),"\n",(0,r.jsx)(i.li,{children:"FatTriangleShape level did not properly take transformations into account (bug fix)."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-242-2024-08-26",children:"Jitter 2.4.2 (2024-08-26)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Added FatTriangleShape to give triangles thickness which can be useful for static triangle meshes."}),"\n",(0,r.jsx)(i.li,{children:"Removal from potential pairs in DynamicTree ignores filters from now on (bug fix)."}),"\n",(0,r.jsx)(i.li,{children:"Use sweep tests for speculative contacts, vastly improving simulation quality in this scenario."}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Redefinition of NarrowPhase.SweepTest results."]}),"\n",(0,r.jsx)(i.li,{children:"Improved TriangleEdgeCollisionFilter."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-241-2024-08-21",children:"Jitter 2.4.1 (2024-08-21)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Improved TriangleEdgeCollisionFilter."}),"\n",(0,r.jsx)(i.li,{children:"Implemented analytical box and sphere ray casting."}),"\n",(0,r.jsx)(i.li,{children:"Made Restitution and Friction public in Contact."}),"\n",(0,r.jsx)(i.li,{children:"Improved DynamicTree interface."}),"\n",(0,r.jsx)(i.li,{children:"Add Debug.Asserts in ActiveList."}),"\n",(0,r.jsx)(i.li,{children:"Mark ArbiterKey as readonly."}),"\n",(0,r.jsx)(i.li,{children:"Added enumerator to PairHashSet."}),"\n",(0,r.jsx)(i.li,{children:"Changed ShapeHelper.MakeHull to take a generic of type ICollection."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-240-2024-08-10",children:"Jitter 2.4.0 (2024-08-10)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Improved TrimPotentialPairs logic."}),"\n",(0,r.jsx)(i.li,{children:"Optimized quaternion vector transformation."}),"\n",(0,r.jsx)(i.li,{children:"Extended functionality of ContactData.UsageMask."}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Overhauled the shape system. Regular shapes (box, sphere, capsule, ...) now derive from RigidBodyShape. Some method signatures changed slightly, e.g. ray casting."]}),"\n",(0,r.jsx)(i.li,{children:"Improved exceptions."}),"\n",(0,r.jsx)(i.li,{children:"Added ReferenceFrameAttribute."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-231-2024-06-02",children:"Jitter 2.3.1 (2024-06-02)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"ReadOnly wrappers (ReadOnlyList, ReadOnlyHashset) are now structs."}),"\n",(0,r.jsx)(i.li,{children:"Shapes with very small dimensions might have close to zero or zero mass/inertia. Creating rigid bodies from them now throws an exception (use body.AddShape(shape, setMassInertia: false) to not use the shape's mass properties)."}),"\n",(0,r.jsx)(i.li,{children:"Added BeginCollide and EndCollide events per body."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-230-2024-05-20",children:"Jitter 2.3.0 (2024-05-20)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Added RigidBody.RemoveShape overload to remove multiple shapes at once."}),"\n",(0,r.jsx)(i.li,{children:"Marked Rigid.ClearShapes deprecated."}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Use JQuaternion for orientations. Sorry for the API break."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-221-2024-04-29",children:"Jitter 2.2.1 (2024-04-29)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Add optional activate parameter to world.AddShape."}),"\n",(0,r.jsx)(i.li,{children:"Add NarrowPhase.SweepTest."}),"\n",(0,r.jsx)(i.li,{children:"EPA collision detection: various improvements."}),"\n",(0,r.jsx)(i.li,{children:"Improve exit condition for RayCast and PointTest."}),"\n",(0,r.jsx)(i.li,{children:"Remove redundant ArgumentException for zero mass shapes."}),"\n",(0,r.jsx)(i.li,{children:"Handle zero time steps. Throw ArgumentException for negative time steps."}),"\n",(0,r.jsx)(i.li,{children:"Add joint base class to joint classes."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-220-2024-01-02",children:"Jitter 2.2.0 (2024-01-02)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Renamed ",(0,r.jsx)(i.code,{children:"Raycast"})," to ",(0,r.jsx)(i.code,{children:"RayCast"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"world.Remove(world.NullBody)"})," does now remove all shapes, constraints and contacts associated with NullBody."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"world.AddShape(shape)"})," respects the activation state of the associated rigid body. Most notable: performance improvement when directly adding ",(0,r.jsx)(i.code,{children:"TriangleShape"}),"s to world.NullBody for static geometry."]}),"\n",(0,r.jsx)(i.li,{children:"Performance improvements for ConvexHullShape."}),"\n",(0,r.jsx)(i.li,{children:"Improved termination condition in GJKEPA collision detection."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-211-2023-12-17",children:"Jitter 2.1.1 (2023-12-17)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Fixed O(n^2) problem in ",(0,r.jsx)(i.code,{children:"TriangleMesh"})," due to hash collisions."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"WorldBoundingBox"})," of ",(0,r.jsx)(i.code,{children:"Shape"})," is now updated even if no ",(0,r.jsx)(i.code,{children:"RigidBody"})," is attached."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-210-2023-12-10",children:"Jitter 2.1.0 (2023-12-10)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Added debug drawing for rigid bodies (",(0,r.jsx)(i.code,{children:"RigidBody.DebugDraw"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:["Fixed a bug in ",(0,r.jsx)(i.code,{children:"CalculateMassInertia"})," within ",(0,r.jsx)(i.code,{children:"TransformedShape.cs"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Improved ray casting performance and introduced ",(0,r.jsx)(i.code,{children:"NarrowPhase.PointTest"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Inverted behavior of ",(0,r.jsx)(i.code,{children:"BroadPhaseCollisionFilter"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Breaking Change:"})," Inverted definition of damping factors in ",(0,r.jsx)(i.code,{children:"RigidBody.Damping"})," (0 = no damping, 1 = immediate halt)."]}),"\n",(0,r.jsxs)(i.li,{children:["Added ",(0,r.jsx)(i.code,{children:"RigidBody.SetMassInertia"})," overload to enable setting the inverse inertia to zero."]}),"\n",(0,r.jsx)(i.li,{children:"An exception is now thrown when a body's mass is set to zero."}),"\n",(0,r.jsxs)(i.li,{children:["Fixed a bug in the friction handling in ",(0,r.jsx)(i.code,{children:"Contact.cs"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-201-2023-10-28",children:"Jitter 2.0.1 (2023-10-28)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Fixed a bug in contact initialization which affected soft body physics."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"jitter-200-2023-10-22",children:"Jitter 2.0.0 (2023-10-22)"}),"\n",(0,r.jsx)(i.p,{children:"Initial stable Release."})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>d});var r=n(6540);const t={},l=r.createContext(t);function s(e){const i=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);